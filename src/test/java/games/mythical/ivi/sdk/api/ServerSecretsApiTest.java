/*
 * IVI Engine
 * IVI Engine
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * Contact: developer@mythical.games
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package games.mythical.ivi.sdk.api;

import games.mythical.ivi.sdk.model.CreateServerSecretRequest;
import games.mythical.ivi.sdk.model.ServerSecretDto;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerSecretsApi
 */
@Ignore
public class ServerSecretsApiTest {

    private final ServerSecretsApi api = new ServerSecretsApi();

    
    /**
     * Create server secret for organization
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createServerSecretForEnvironmentTest() {
        UUID organizationId = null;
        CreateServerSecretRequest createServerSecretRequest = null;
        ServerSecretDto response = api.createServerSecretForEnvironment(organizationId, createServerSecretRequest);

        // TODO: test validations
    }
    
    /**
     * Delete server secret for environment by secret ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteServerSecretTest() {
        UUID organizationId = null;
        String secretId = null;
        api.deleteServerSecret(organizationId, secretId);

        // TODO: test validations
    }
    
    /**
     * Disable server secret by secret ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void disableServerSecretTest() {
        UUID organizationId = null;
        String secretId = null;
        api.disableServerSecret(organizationId, secretId);

        // TODO: test validations
    }
    
    /**
     * Enable server secret by secret ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void enableServerSecretTest() {
        UUID organizationId = null;
        String secretId = null;
        api.enableServerSecret(organizationId, secretId);

        // TODO: test validations
    }
    
    /**
     * Get server secret for environment by secret ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getServerSecretByIdTest() {
        UUID organizationId = null;
        String secretId = null;
        ServerSecretDto response = api.getServerSecretById(organizationId, secretId);

        // TODO: test validations
    }
    
    /**
     * Get server secrets defined for organization
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getServerSecretsForEnvironmentTest() {
        UUID organizationId = null;
        List<ServerSecretDto> response = api.getServerSecretsForEnvironment(organizationId);

        // TODO: test validations
    }
    
}
