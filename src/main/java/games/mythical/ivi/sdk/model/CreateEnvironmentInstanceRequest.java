/*
 * IVI Engine
 * IVI Engine
 *
 * The version of the OpenAPI document: unspecified
 * Contact: developer@mythical.games
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package games.mythical.ivi.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * CreateEnvironmentInstanceRequest
 */
@JsonPropertyOrder({
  CreateEnvironmentInstanceRequest.JSON_PROPERTY_DISPLAY_NAME,
  CreateEnvironmentInstanceRequest.JSON_PROPERTY_ENVIRONMENT_TYPE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-09-15T00:53:22.361116-07:00[America/Los_Angeles]")
public class CreateEnvironmentInstanceRequest {
  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  /**
   * Gets or Sets environmentType
   */
  public enum EnvironmentTypeEnum {
    DEV("DEV"),
    
    QA("QA"),
    
    STAGING("STAGING"),
    
    PROD("PROD"),
    
    UNRECOGNIZED("UNRECOGNIZED");

    private String value;

    EnvironmentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EnvironmentTypeEnum fromValue(String value) {
      for (EnvironmentTypeEnum b : EnvironmentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ENVIRONMENT_TYPE = "environmentType";
  private EnvironmentTypeEnum environmentType;


  public CreateEnvironmentInstanceRequest displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CreateEnvironmentInstanceRequest environmentType(EnvironmentTypeEnum environmentType) {
    
    this.environmentType = environmentType;
    return this;
  }

   /**
   * Get environmentType
   * @return environmentType
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EnvironmentTypeEnum getEnvironmentType() {
    return environmentType;
  }


  public void setEnvironmentType(EnvironmentTypeEnum environmentType) {
    this.environmentType = environmentType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateEnvironmentInstanceRequest createEnvironmentInstanceRequest = (CreateEnvironmentInstanceRequest) o;
    return Objects.equals(this.displayName, createEnvironmentInstanceRequest.displayName) &&
        Objects.equals(this.environmentType, createEnvironmentInstanceRequest.environmentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, environmentType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateEnvironmentInstanceRequest {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    environmentType: ").append(toIndentedString(environmentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

