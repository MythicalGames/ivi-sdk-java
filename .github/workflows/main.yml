name: IVI SDK CI Job

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        fetch-depth: 0
        submodules: recursive
        token: ${{ secrets.BUILDBOT_PERSONAL_TOKEN }}
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Set up local Git user
      run: |
        git config user.name "Mythical Buildbot"
        git config user.email "buildbot@mythical.games"

    - name: Run unit tests and generate code coverage
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        ./gradlew :ivi-sdk-java:test :ivi-sdk-java:jacocoTestReport :ivi-sdk-java:coverallsJacoco

    - name: Build Snapshot
      if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
      env:
        GRGIT_USER: 'Mythical Buildbot'
        GRGIT_PASS: ${{ github.token }}
        GITHUB_USER: 'Mythical Buildbot'
        GITHUB_TOKEN: ${{ github.token }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
        ORG_GRADLE_PROJECT_ossrhUsername: 'mythical_keith'
        ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
      run: |
        ./gradlew build publishMavenJavaPublicationToGitHubPackagesRepository -x test

    - name: Build Release
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      env:
        GRGIT_USER: 'Mythical Buildbot'
        GRGIT_PASS: ${{ github.token }}
        GITHUB_USER: 'Mythical Buildbot'
        GITHUB_TOKEN: ${{ github.token }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
        ORG_GRADLE_PROJECT_ossrhUsername: 'mythical_keith'
        ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
      run: |
        ./gradlew build publishMavenJavaPublicationToMavenCentralRepository -x test
        ./gradlew printVersionToFile
        version=$(cat version.txt)
        git tag -a v${version} -m "Releasing version ${version}"
        git push --tags

    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took,message
        custom_payload: |
          {
            username: 'github-actions',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO} by ${process.env.AS_AUTHOR} finished in ${process.env.AS_TOOK}\nMessage: ${process.env.AS_MESSAGE}`,
            }]
          }
      env:
        GITHUB_TOKEN: ${{ github.token }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}