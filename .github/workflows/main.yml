name: IVI SDK CI Job

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        fetch-depth: 0
        submodules: recursive
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Set up permissions and git before starting
      run: |
        gcloud auth configure-docker --quiet
        chmod +x gradlew

        git config --global user.name "Mythical Buildbot"
        git config --global user.email "buildbot@mythical.games"

    - name: Run unit tests
      run: |
        ./gradlew test

    - name: Build Snapshot
      if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
      env:
        GITHUB_USER: 'Mythical Buildbot'
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        ./gradlew build snapshot :publishGprPublicationToGitHubPackagesRepository

    - name: Build Release
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      env:
        GITHUB_USER: 'Mythical Buildbot'
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        ./gradlew build final :publishGprPublicationToGitHubPackagesRepository

    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took,message
        custom_payload: |
          {
            username: 'github-actions',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO} by ${process.env.AS_AUTHOR} finished in ${process.env.AS_TOOK}\nMessage: ${process.env.AS_MESSAGE}`,
            }]
          }
      env:
        GITHUB_TOKEN: ${{ github.token }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}